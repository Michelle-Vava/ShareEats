# This is an example Starter pipeline configuration
# Use a skeleton to build, test and deploy using manual and parallel steps
# -----
# You can specify a custom docker image from Docker Hub as your build environment.
image:  python:3.9.10
clone:
  depth: full
# Deploy the master branch to our app.
# Pulls the Heroku API Key and the name of the app from our
# configured environment variables.
herokuAppDeployment: &herokuAppDeployment
  name: Deploy Heroku App
  variables:
    HEROKU_API_KEY: $HEROKU_API_KEY
    HEROKU_APP_NAME: $HEROKU_APP_NAME
  script:
    - git push https://heroku:$HEROKU_API_KEY@git.heroku.com/$HEROKU_APP_NAME.git master -f
pipelines:
  default:
        - step:
              name: Testing
              script:
                - pip install -r requirements.txt
                - python manage.py test
#      - step:
##            caches:
##             - pip
#            script:
##              - pip install -r requirements.txt
#              - python manage.py test

#        - step:
#              name: 'Create Artifact'
#              script:
#                - echo "Your build and test goes here..."
#                - git archive --format=tar.gz GROUPF/main -o shareeats.tar.gz
#              artifacts:
#                - shareeats.tar.gz
        - step:
              name: 'Lint'
              script:
                - echo "Your linting goes here..."
        - step:
              name: 'Security scan'
              script:
                - echo "Your security scan goes here..."

        # The following deployment steps will be executed for each pipeline run. To configure your steps and conditionally deploy see https://support.atlassian.com/bitbucket-cloud/docs/configure-bitbucket-pipelinesyml/
        - step:
            name: 'Deployment to Staging'
            deployment: staging
            script:
              - echo "Your deployment to staging script goes here..."

        - step:
            name: 'Deployment to Production'
            deployment: production
            trigger: 'manual'
            script:
              - echo "Production Deployment underway"
         # Deploy the master branch to our app whenever it is updated
            branches:
              main:
              - step: *herokuAppDeployment



            #                    trigger: 'manual'
#                    caches:
#                          - pip
#                    script:
#                    - pip install -r requirements.txt
#                    - git push origin main
#                    #- git archive --format=tar.gz main -o shareeats.tar.gz
#                    - pipe: atlassian/heroku-deploy:1.2.1
#                      variables:
#                        HEROKU_API_KEY: $HEROKU_API_KEY
#                        HEROKU_APP_NAME: $HEROKU_APP_NAME


            #            script:
#              - git archive --format=tar.gz GROUPF/main -o shareeats.tar.gz
#    #        - pip install -r requirements.txt
#    #        - git push origin main
#             artifacts:
#              - shareeats.tar.gz
